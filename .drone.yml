kind: pipeline
name: default
type: docker

steps:
  - name: Backend Build & Test
    pull: if-not-exists
    image: golang:1.17-alpine
    environment:
      CGO_ENABLED: 0
      GOCACHE: /tmp/cache/go-build # Change the go build cache to a persistent folder
      GOMODCACHE: /tmp/cache/pkg.mod # Change the go module cache to a persistent folder
    commands:
      - mkdir -p /tmp/cache/go-build /tmp/cache/pkg.mod # Make sure the cache folders exist
      - go build
      - go test -v ./...
    volumes:
      - name: cache
        path: /tmp/cache

  - name: Frontend Build
    pull: if-not-exists
    image: node:16
    environment:
      NEXT_TELEMETRY_DISABLED: 1 # Don't take my data next js
    commands:
      - mkdir -p /tmp/cache/node-16-cache # Make sure the cache exists
      - npm config set cache /tmp/cache/node-16-cache --global # Change the default node cache dir
      - cd dashboard
      - npm ci
      - npm run build
      - cd ..
    volumes:
      - name: cache
        path: /tmp/cache

  - name: Build Docker container
    pull: if-not-exists
    image: docker
    commands:
      - docker build -t rtcv:latest .
    volumes:
      - name: dockerSocket
        path: /var/run/docker.sock
    depends_on: # Build backend and frontend in parallel
      - Backend Build & Test
      - Frontend Build

  - name: Deploy Docker container
    pull: if-not-exists
    image: docker
    commands:
      - docker rm -f rtcv # Remove the old container
      - /root/dockerRunScript # Run the script to deploy the container
    volumes:
      - name: dockerSocket
        path: /var/run/docker.sock
      - name: dockerRunEnv
        path: /root/rtcv.env
      - name: dockerRunScript
        path: /root/dockerRunScript
    depends_on:
      - Build Docker container

trigger:
  branch:
    - main

volumes:
  - name: dockerSocket
    host:
      path: /var/run/docker.sock
  - name: cache
    host:
      path: /root/.buildcache
  - name: dockerRunEnv
    host:
      path: /root/rtcv.env
  - name: dockerRunScript
    host:
      path: /root/rtcv.sh
